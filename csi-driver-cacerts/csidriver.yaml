apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: cacerts.csi.cert-manager.io
spec:
  attachRequired: false
  podInfoOnMount: true
  volumeLifecycleModes:
    - Ephemeral
  fsGroupPolicy: File
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-driver-cacerts
  namespace: csi-driver-cacerts
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: csi-driver-cacerts
      app.kubernetes.io/instance: csi-driver-cacerts
  template:
    metadata:
      labels:
        app.kubernetes.io/name: csi-driver-cacerts
        app.kubernetes.io/instance: csi-driver-cacerts
    spec:
      serviceAccountName: csi-driver-cacerts
      containers:
        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.11.1
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi-driver-cacerts /registration/csi-driver-cacerts-reg.sock"]
          args:
            - -v=2
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-driver-cacerts/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
          resources:
            {}

        - name: liveness-probe
          image: registry.k8s.io/sig-storage/livenessprobe:v2.13.1
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=9809
            - -v=2
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi

        - name: driver
          image: ghcr.io/appscode/csi-driver-cacerts:v0.0.4
          args:
            - -v=2
            - --drivername=cacerts.csi.cert-manager.io
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(KUBE_NODE_NAME)
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          ports:
            - containerPort: 9809
              name: healthz
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /var/lib/containers/storage
              mountPropagation: Bidirectional
              name: storageroot-dir
            - mountPath: /var/run/containers/storage
              mountPropagation: Bidirectional
              name: storagerunroot-dir
          resources:
            {}

      tolerations:
        []

      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-driver-cacerts
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/containers/storage
            type: DirectoryOrCreate
          name: storageroot-dir
        - hostPath:
            path: /var/run/containers/storage
            type: DirectoryOrCreate
          name: storagerunroot-dir
---